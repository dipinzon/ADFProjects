package oracle.summitdi.model.queries;

import oracle.jbo.Key;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;

import oracle.summitdi.base.SummitEntityImpl;
import oracle.summitdi.base.SummitViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 17 12:27:22 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WarehouseViewRowImpl extends SummitViewRowImpl {
    public static final int ENTITY_WAREHOUSE = 0;
    public static final int ENTITY_COUNTRIES = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
    Id {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getId();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setId((Integer)value);
      }
    }
    ,
    Address {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getAddress();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setAddress((String)value);
      }
    }
    ,
    City {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getCity();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setCity((String)value);
      }
    }
    ,
    State {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getState();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setState((String)value);
      }
    }
    ,
    CountryId {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getCountryId();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setCountryId((String)value);
      }
    }
    ,
    ZipCode {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getZipCode();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setZipCode((String)value);
      }
    }
    ,
    Phone {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getPhone();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setPhone((String)value);
      }
    }
    ,
    ManagerId {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getManagerId();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setManagerId((Integer)value);
      }
    }
    ,
    Country {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getCountry();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setCountry((String)value);
      }
    }
    ,
    Id1 {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getId1();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setId1((Integer)value);
      }
    }
    ,
    RegionId {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getRegionId();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setRegionId((Integer)value);
      }
    }
    ,
    RowKey {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getRowKey();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setRowKey((String)value);
      }
    }
    ,
    CountriesVA {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getCountriesVA();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    ManagersVA {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getManagersVA();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    RegionsVA {
      public Object get(WarehouseViewRowImpl obj) {
        return obj.getRegionsVA();
      }

      public void put(WarehouseViewRowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

        public abstract Object get(WarehouseViewRowImpl object);

        public abstract void put(WarehouseViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


  public static final int ID = AttributesEnum.Id.index();
  public static final int ADDRESS = AttributesEnum.Address.index();
  public static final int CITY = AttributesEnum.City.index();
  public static final int STATE = AttributesEnum.State.index();
  public static final int COUNTRYID = AttributesEnum.CountryId.index();
  public static final int ZIPCODE = AttributesEnum.ZipCode.index();
  public static final int PHONE = AttributesEnum.Phone.index();
  public static final int MANAGERID = AttributesEnum.ManagerId.index();
  public static final int COUNTRY = AttributesEnum.Country.index();
  public static final int ID1 = AttributesEnum.Id1.index();
  public static final int REGIONID = AttributesEnum.RegionId.index();
  public static final int ROWKEY = AttributesEnum.RowKey.index();
  public static final int COUNTRIESVA = AttributesEnum.CountriesVA.index();
  public static final int MANAGERSVA = AttributesEnum.ManagersVA.index();
  public static final int REGIONSVA = AttributesEnum.RegionsVA.index();

  /**
   * This is the default constructor (do not remove).
   */
    public WarehouseViewRowImpl() {
    }

    /**
     * Gets Warehouse entity object.
     * @return the Warehouse
     */
    public SummitEntityImpl getWarehouse() {
        return (SummitEntityImpl)getEntity(ENTITY_WAREHOUSE);
    }

    /**
     * Gets Countries entity object.
     * @return the Countries
     */
    public SummitEntityImpl getCountries() {
        return (SummitEntityImpl)getEntity(ENTITY_COUNTRIES);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for ADDRESS using the alias name Address.
     * @return the ADDRESS
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS using the alias name Address.
     * @param value value to set the ADDRESS
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for CITY using the alias name City.
     * @return the CITY
     */
    public String getCity() {
        return (String) getAttributeInternal(CITY);
    }

    /**
     * Sets <code>value</code> as attribute value for CITY using the alias name City.
     * @param value value to set the CITY
     */
    public void setCity(String value) {
        setAttributeInternal(CITY, value);
    }

    /**
     * Gets the attribute value for STATE using the alias name State.
     * @return the STATE
     */
    public String getState() {
        return (String) getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as attribute value for STATE using the alias name State.
     * @param value value to set the STATE
     */
    public void setState(String value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for COUNTRY_ID using the alias name CountryId.
     * @return the COUNTRY_ID
     */
    public String getCountryId() {
        return (String) getAttributeInternal(COUNTRYID);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY_ID using the alias name CountryId.
     * @param value value to set the COUNTRY_ID
     */
    public void setCountryId(String value) {
        setAttributeInternal(COUNTRYID, value);
    }

    /**
     * Gets the attribute value for ZIP_CODE using the alias name ZipCode.
     * @return the ZIP_CODE
     */
    public String getZipCode() {
        return (String) getAttributeInternal(ZIPCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for ZIP_CODE using the alias name ZipCode.
     * @param value value to set the ZIP_CODE
     */
    public void setZipCode(String value) {
        setAttributeInternal(ZIPCODE, value);
    }

    /**
     * Gets the attribute value for PHONE using the alias name Phone.
     * @return the PHONE
     */
    public String getPhone() {
        return (String) getAttributeInternal(PHONE);
    }

    /**
     * Sets <code>value</code> as attribute value for PHONE using the alias name Phone.
     * @param value value to set the PHONE
     */
    public void setPhone(String value) {
        setAttributeInternal(PHONE, value);
    }

    /**
     * Gets the attribute value for MANAGER_ID using the alias name ManagerId.
     * @return the MANAGER_ID
     */
    public Integer getManagerId() {
        return (Integer) getAttributeInternal(MANAGERID);
    }

    /**
     * Sets <code>value</code> as attribute value for MANAGER_ID using the alias name ManagerId.
     * @param value value to set the MANAGER_ID
     */
    public void setManagerId(Integer value) {
        setAttributeInternal(MANAGERID, value);
    }

    /**
     * Gets the attribute value for COUNTRY using the alias name Country.
     * @return the COUNTRY
     */
    public String getCountry() {
        return (String) getAttributeInternal(COUNTRY);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY using the alias name Country.
     * @param value value to set the COUNTRY
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id1.
     * @return the ID
     */
    public Integer getId1() {
        return (Integer) getAttributeInternal(ID1);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id1.
     * @param value value to set the ID
     */
    public void setId1(Integer value) {
        setAttributeInternal(ID1, value);
    }

    /**
     * Gets the attribute value for REGION_ID using the alias name RegionId.
     * @return the REGION_ID
     */
    public Integer getRegionId() {
        return (Integer) getAttributeInternal(REGIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for REGION_ID using the alias name RegionId.
     * @param value value to set the REGION_ID
     */
    public void setRegionId(Integer value) {
        setAttributeInternal(REGIONID, value);
    }

    /**
     * @overriden
     * Gets the attribute value for the calculated attribute RowKey.
     * @return the RowKey
     */
    public String getRowKey() {
        Key key = super.getKey();
        if(key == null){
            return "";
        }
        //
        return key.toStringFormat(false);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RowKey.
     * @param value value to set the  RowKey
     */
    public void setRowKey(String value) {
        setAttributeInternal(ROWKEY, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CountriesVA.
     */
    public RowSet getCountriesVA() {
        return (RowSet)getAttributeInternal(COUNTRIESVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ManagersVA.
     */
    public RowSet getManagersVA() {
        return (RowSet)getAttributeInternal(MANAGERSVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RegionsVA.
     */
    public RowSet getRegionsVA() {
        return (RowSet)getAttributeInternal(REGIONSVA);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
